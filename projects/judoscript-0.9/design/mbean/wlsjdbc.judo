
url       = 't3://localhost:7011';
user      = 'system';
pwd       = 'weblogic';
server    = 'mainserver';
filename  = 'jdbc.log';
poolName  = 'EmployeeCP';
freq      = 5;

// To look at names in MBeanHome for JDBC CPs:
//   java weblogic.Admin -username system -password weblogic GET
//        -pretty -type JDBCConnectionPoolRuntime

JNDI_Home = weblogic.management.MBeanHome::JNDI_NAME;

ctxt      = weblogicContext(url,user,pwd);
mBeanHome = ctxt.lookup(JNDI_Home @ '.' @ server);
mbean     = mBeanHome.getRuntimeMBean(poolName, 'JDBCConnectionPoolRuntime');
//logFile   = openTextFile(filename, 'w');
logFile   = getOut();

println <err> 'Logging data to ', filename, ' every ', freq, ' seconds...', nl; 

println <logFile> [[*
    MBeanHome successfully located.

    ACCC = Active Connections Current Count
    ACHC = Active Connections High Count
    CDT  = Connection Delay Time
    CTC  = Connections Total Count
    FRC  = Failures to Reconnect Count
    LCC  = Leaked Connection Count
    WCCC = Waiting for Connection Current Count
    WCHC = Waiting for Connection High Count
    WSHC = Wait Seconds High Count

    TIME         ACCC    ACHC     CDT     CTC     FRC     LCC    WCCC    WCHC    WSHC
    --------  ------- ------- ------- ------- ------- ------- ------- ------- -------
  *]];

while {
  println <logFile> date().fmtDate('hh:mm:ss'), ' ',
                    mbean.getActiveConnectionsCurrentCount()    :>8,
                    mbean.getActiveConnectionsHighCount()       :>8,
                    mbean.getConnectionDelayTime()              :>8,
                    mbean.getConnectionsTotalCount()            :>8,
                    mbean.getFailuresToReconnectCount()         :>8,
                    mbean.getLeakedConnectionCount()            :>8,
                    mbean.getWaitingForConnectionCurrentCount() :>8,
                    mbean.getWaitingForConnectionHighCount()    :>8,
                    mbean.getWaitSecondsHighCount()             :>8;

  sleep(freq*1000);
}

catch: $_.printInternalStackTrace();
//finally: logFile.close();
