#!/usr/bin/env judo

/*
 * Test and sample usage of JudoScript Logger
 */

!include 'log.judi'

log.level = log.WARN;

  // Log messages printed to the console [true]
  //   or (Default) just to log/email [false]
log.toConsole = true;

  // Uncomment this section to test local SMTP server
/* 
log.level = log.TRACE;
log.alertLevel = log.WARN;
log.alertTo = 'user@domain.tld';

  // Save all messages for one email [true]
  //   or (Default) one email per log message [false]
log.alertQueueMessages = true; 

  // You may or may not need to specify the "alertFrom"
  // with a local sendmail server, but you almost certainly 
  // will need it with a remote SMTP server

//log.alertFrom = 'user@domain.tld';
*/

  // Use remote SMTP server 
/*
log.alertFrom = 'user@domain.tld';
log.alertServer = 'smtp.domain.tld';
log.alertUser = 'judoscript.logger@domain.tld';
log.alertPassword = 'password';
*/

  // Put everything inside a 'try' block to be sure the logger closes
{

  // Where ever you want a message, just send it to log as below
log.fatal('This is a test');
log.error('of the emergency broadcast system.');
log.warn('This is only a test');
log.info('If this were an actual emergency');
log.debug('you would be instructed');
log.trace('To put your head between your legs and kiss your fanny goodbye');

  // Test exceptions within the script
/*
log.methodDoesNotExist();
log.fatal('This message won\'t be logged');
*/

  // Capture the unexpected and clean up
catch:
  log.fatal('Exception: ' @ $_.msg);
finally:
  log.close();
}
