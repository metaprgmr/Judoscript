import buoy.event.*;
import buoy.widget.*;
import javax.swing.ImageIcon;
import java.awt.*;

(java::javax.swing.UIManager).setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
(java::net.java.plaf.LookAndFeelPatchManager).initialize();

f					= new java::BFrame("Minuet");
c					= new java::BorderContainer();
menubar			= new java::RowContainer();
propsbar			= new java::FormContainer(2,1);
props				= new OrderedMap;
translations	= new OrderedMap;
northfiller		= new java::LayoutInfo( (java::LayoutInfo).WEST , (java::LayoutInfo).NONE );
screen         = new java::CustomWidget();
scroller       = new java::BScrollPane( screen , (java::BScrollPane).SCROLLBAR_ALWAYS , (java::BScrollPane).SCROLLBAR_ALWAYS );
scroller.setForceWidth(true);
scroller.setForceHeight(true);


closinghandler = new java::Object {
		void processEvent()
		{
		  exit ;
		}
	};

menuhandler = new java::Object {
		void processEvent( CommandEvent e )
		{
		action =  e.getActionCommand();
		. action;
		if( action == "New Project" ){ doNewProject(); }
		if( action == "Exit" ){ exit; }
		}
	 };

mousehandler = new java::Object {
		void processEvent(WidgetMouseEvent mce){
			if( mce.isPopupTrigger() ){
				(java::BMenuFactory).createPopup( "Do thing 1,Do thing 2,Do thing 3" , ::menuhandler ).show( mce );
			}	
		}
	};


//Final setup
//Addition of components
f.setContent(c);
c.add( (java::BOutline).createEmptyBorder( menubar , true )  , (java::BorderContainer).NORTH );
c.add( (java::BOutline).createEtchedBorder( propsbar , true ) , (java::BorderContainer).WEST );
c.add( (java::BOutline).createEtchedBorder( scroller , true ) , (java::BorderContainer).CENTER );
propsbar.setDefaultLayout( northfiller );
//Custom stuff
setTranslations( translations );

addButton( menubar , 'create' , 'img/New24.gif' , menuhandler );
addButton( menubar , 'open'   , 'img/Open24.gif' , menuhandler );
addButton( menubar , 'save'   , 'img/Save24.gif' , menuhandler );
addButton( menubar , 'run'   , 'img/Play24.gif' , menuhandler );

. props , propsbar;
doNewProject()
//	props = setMinimalProperties( props );
//	setpropsbar( propsbar , props , "BForm1" , translations );

(java::BMenuFactory).createMenu( f , "&File[New Project,2,Exit]Edit[Undo]Tools[Plugins,Options]Help[About minuet,Help...]" , menuhandler );
//Event linking
f.addEventLink(java::buoy.event.WindowClosingEvent, closinghandler );
scroller.addEventLink( java::WidgetMouseEvent , mousehandler );
screen.addEventLink( java::WidgetMouseEvent , mousehandler );
//finalizing
f.getComponent().setIconImage( (new java::ImageIcon( "img/musdoc.gif" )).getImage() );
f.pack();
f.setVisible(true);
//final stroke
f.getComponent().setExtendedState( (java::java.awt.Frame).MAXIMIZED_BOTH );

//INITIALIZATION ends here !



//HANDLER FUNCTIONS

function doNewProject{
	. props , propsbar;
	props = setMinimalProperties( props );
	setpropsbar( propsbar , props , "BForm1" , translations );
}

function doNewProject_(){
	::props = setMinimalProperties( ::props );
	::setpropsbar( ::propsbar , ::props , "BForm1" , ::translations );
}

//HELPER FUNCTIONS

//This adds a button a container
//Sadly enough Buoy doesnt see the need for a button bar
//container needs to be RowContainer ( well, I havent tested what would happen otherwise )
//action needs to be a string, it will become the actioncommand
//icon needs to be a string, containing a relative path to an icon
function addButton container , action , icon , handler {
	button = new java::BButton( new java::ImageIcon(icon) );
	button.setActionCommand( action );
	button.addEventLink( java::buoy.event.CommandEvent , handler );
	container.add( button );
}

function setpropsbar propsbar , props , widgetname , translations {
	propsbar.removeAll();
	widget = props.(widgetname);
	for prop in widget.keys() {
		. prop;
		addProperty( propsbar , props , widgetname , prop , translations.(prop) );
	}
}


//This adds a property to a propsbar container
//container needs to be a formcontainer, pretty sure things will crash otherwise
//valuename needs to be english and short and easy to remember and only lowercase
//caption can be whatever, all internal coding must work with the valuename

function addProperty container , props, widgetname ,valuename , caption {
	rows = container.getRowCount();
	items = container.getChildCount();
	. items;
	if( items/2 == rows ){
		rows++;
		container.setRowCount(rows);
	}

	widget = props.(widgetname);
	
	value  = widget.(valuename);

	container.add( new java::BLabel(caption) , 0 , items/2 );
	container.add( new java::BTextField(15) , 1 , items/2 );
	container.setRowWeight( items/2 , 0 );
	. 'Done addproperty';
}

//Builds an 'aperçu' of the future form
//This puts the apercu in the center location of the container
function apercu container {


}

//Builds and runs the actual form, scary huh :D
function run {


}

function setMinimalProperties props{
	props = new OrderedMap();
	widget = new OrderedMap();
	widget.status = 'Maximized';
	widget.name = 'BForm1';
	widget.caption = 'New Application';
	widget.icon = 'img/musdoc.gif';
	props.BForm1 = widget;
	return props;
}

function setTranslations translations{
	translations.name		= 'Widget Name';
	translations.caption	= 'Window Caption';
	translations.icon		= 'Window Icon';
	translations.status	= 'Window Status';
}