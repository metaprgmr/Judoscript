usage {
  author  = 'James Huang';
  created = '2001-11-12';
  lastMod = '2002-08-10';
  desc    = "Creates a struct of struct's, and get keys sorted by keys and by values.";
}

a = new struct;

a.('0-679-40907-6') = { title  : 'Breads from the la Brea Bakery',
                        author : 'Silverton, Nancy',
                        pages  : 260 };
a.('0-06-017315-7') = { title  : 'Four-Star Desserts',
                        author : 'Luchetti, Emily',
                        pages  : 252 };
a.('0-89256-228-5') = { title  : 'Eat to Win',
                        author : 'Haas, Robert',
                        pages  : 266 };
a.('0-517-70442-0') = { title  : 'The Blue Ribbon County Cookbook',
                        author : 'Roupe, Diane',
                        pages  : 884 };

println ">> Order by ISBN:";
keys = a.keysSorted();
for x in keys {
  println x, '  ', a.(x).author : < 20, a.(x).pages;
}

println nl, ">> Order by authors' last name:";
keys = a.keysSortedByValue( lambda lhs, rhs { return compare(lhs.author,rhs.author); } );
for x in keys {
  println x, '  ', a.(x).author : < 20, a.(x).pages;
}

println nl, ">> Select books with <= 300 pages:";
keys = a.keysFilteredByValue( lambda book { return book.pages <= 300; } );
for x in keys {
  println x, '  ', a.(x).author : < 20, a.(x).pages;
}

println nl, ">> Select books with <= 300 pages and ordered by descending page numbers:";
keys = a.keysFilteredAndSortedByValue(
          lambda book { return book.pages <= 300; },
          lambda lhs, rhs { return compare(rhs.pages,lhs.pages); }
        );
for x in keys {
  println x, '  ', a.(x).author : < 20, a.(x).pages;
}
